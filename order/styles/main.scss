@import 'mixins';
@import 'keyframes';

* {
  box-sizing: border-box;
}

body {
  height: 100vh;
  width: 100vw;

  margin: 0;
}

.container {
  height: 100%;
  @include flexCenter;
  flex-direction: column;
  gap: 2rem;

  .order-btn {
    font-size: 24px;
  }

  .reset {
    background-color: #6495ed;
    border: 0;
    cursor: pointer;
    font-size: 16px;
    padding: 1rem 2rem;
    border-radius: 1rem;
  }
}

.order-btn {
  border: 0;
  padding: 1em;
  border-radius: 2em;
  width: 12em;
  background-color: black;
  color: white;
  height: 3em;
  line-height: 1em;
  cursor: pointer;
  position: relative;

  overflow: hidden;

  .prompt {
    @include absCenter;
    @include flexCenter;
  }

  .success {
    opacity: 0;
    @include absCenter;
    @include flexCenter;
    .check {
        color: lightgreen;
        margin-left: .3em;
    }
  }

  .road-container {
    @include absCenter;
    @include flexCenter;

    .package {
      @include square(0.9em);
      display: flex;
      justify-content: end;
      background: #b38b6d;
      padding: 0.2em;
      box-sizing: border-box;
      position: absolute;
      left: -1em;

      .stamp {
        background: #947451;
        @include square(0.3em);
      }
    }

    .van {
      @include rect(1.5em, 2em);
      position: absolute;
      right: -2em;
      background-color: white;
      border-radius: 0.1em;

      .doors {
        padding: 5% 0;
        height: 100%;
        position: absolute;
        .door {
          height: 50%;
          width: 1px;
          border-radius: 1em;
          background-color: white;
          width: 0.1em;
          transform-origin: top;
          --rotation: 90deg;
          &:last-of-type {
            transform-origin: bottom;
            --rotation: -90deg;
          }
        }
      }
      .cabin {
        position: absolute;
        right: -1.1em;
        background-color: #6495ed;
        @include rect(1.5em, 1em);
        border-top-right-radius: 0.2em;
        border-bottom-right-radius: 0.2em;
        display: flex;

        .top {
          background-color: white;
          opacity: 0.2;
          height: 1.5em;
          width: 0.2em;
        }

        .windsheild {
          margin-top: auto;
          margin-bottom: auto;
          height: 100%;
          border-right: 0.5em solid #152238;
          border-top-right-radius: 1em;
          border-bottom-right-radius: 1em;
        }

        .lights {
          width: 0.3em;
          height: 100%;
          @include flexCenter();
          flex-direction: column;
          gap: 0.8em;
          .light {
            @include square(0.2em);
            border-radius: 50%;
            background-color: #b38b6d;
            position: relative;
            .beam {
              left: 0.1em;
              position: absolute;
              background: linear-gradient(90deg, yellow 0%, transparent 100%);
              width: 2em;
              height: 1em;
              clip-path: polygon(0 66%, 0 36%, 100% 0, 100% 100%);
              transform: translateY(-40%);
            }
          }
        }
      }
    }

    .road {
      background-image: linear-gradient(to right, white 60%, black 0%);
      background-position: bottom;
      background-size: 1em 1px;
      background-repeat: repeat-x;
      height: 0.4em;
      width: 300%;
      right: 300%;
      position: absolute;
    }
  }

  --button-time: 300ms;
  --prompt-delay: var(--button-time);
  --prompt-duration: 500ms;
  --success-delay: calc(var(--prompt-delay) + var(--prompt-duration));
  --success-duration: 1s;
  --package-delay: calc(var(--prompt-delay) + var(--prompt-duration));
  --package-duration: 3s;
  --door-delay: calc(var(--package-delay) + var(--package-duration) / 4);
  --door-duration: calc(var(--package-duration) / 2);
  --door2-delay: calc(var(--door-delay) + 200ms);
  --road-start-delay: calc(var(--package-duration) + var(--package-delay));
  --road-start-duration: 4s;
  --van-exit-delay: calc(var(--road-start-delay) + var(--road-start-duration) / 2);
  --van-exit-duration: calc(var(--road-start-duration) / 4);
  --success-delay: calc(var(--van-exit-delay) + var(--van-exit-duration) * 2);
  --success-duration: 500ms;

  &.animate {
    animation: button var(--button-time) linear;
    .prompt {
      animation: prompt var(--prompt-duration) var(--prompt-delay) linear
        forwards;
    }

    .package {
      animation: package var(--package-duration) var(--package-delay) linear
        forwards;
    }

    .van {
      animation: loading var(--package-duration) var(--package-delay) linear forwards, vanExit var(--van-exit-duration) var(--van-exit-delay) linear
        forwards;

      .door {
        animation: door var(--door-duration) var(--door-delay) linear;
        &:last-of-type {
          animation-delay: var(--door2-delay);
        }
      }
    }

    .road {
      animation: roadStart var(--road-start-duration) var(--road-start-delay)
        linear forwards;
    }

    .success {
        animation: success var(--success-duration) var(--success-delay) linear forwards;
    }
  }
}
